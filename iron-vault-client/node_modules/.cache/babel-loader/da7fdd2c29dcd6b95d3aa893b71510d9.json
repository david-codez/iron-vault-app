{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nconst PREFIX = 'iron-vault-';\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue !== null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n} // Use throughout your app instead of plain `useDispatch` and `useSelector`\n\n_s(useLocalStorage, \"SbXHgs3onfLoxGgg6vvVWWVrY10=\");\n\nexport const useAppDispatch = () => {\n  _s2();\n\n  return useDispatch();\n};\n\n_s2(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["useDispatch","useSelector","useState","useEffect","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify","useAppDispatch","useAppSelector"],"sources":["/Users/homebase/Documents/David Codez Repo/MERN-iron-vault/iron-vault-client/src/app/hooks.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\nimport { useState, useEffect } from 'react';\n\nconst PREFIX = 'iron-vault-'\n\nexport default function useLocalStorage(key: any, initialValue: any) {\n    const prefixedKey = PREFIX + key\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if(jsonValue !== null) return JSON.parse(jsonValue)\n        if(typeof initialValue === 'function') {\n            return initialValue()\n        } else {\n            return initialValue\n        }\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey,value])\n\n    return [value, setValue]\n}\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\n"],"mappings":";;;AAAA,SAA+BA,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAG,aAAf;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAAmCC,YAAnC,EAAsD;EAAA;;EACjE,MAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAAM;IACrC,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB;IACA,IAAGG,SAAS,KAAK,IAAjB,EAAuB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;IACvB,IAAG,OAAOJ,YAAP,KAAwB,UAA3B,EAAuC;MACnC,OAAOA,YAAY,EAAnB;IACH,CAFD,MAEO;MACH,OAAOA,YAAP;IACH;EACJ,CARiC,CAAlC;EAUAJ,SAAS,CAAC,MAAM;IACZS,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;EACH,CAFQ,EAEN,CAACD,WAAD,EAAaC,KAAb,CAFM,CAAT;EAIA,OAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH,C,CAED;;GAnBwBL,e;;AAoBxB,OAAO,MAAMa,cAAc,GAAG;EAAA;;EAAA,OAAMlB,WAAW,EAAjB;AAAA,CAAvB;;IAAMkB,c;UAAuBlB,W;;;AACpC,OAAO,MAAMmB,cAA+C,GAAGlB,WAAxD"},"metadata":{},"sourceType":"module"}