{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService'; // get user from local storage\n// get user from local storage\n// let user = JSON.parse(localStorage.user)\n// console.log(localStorage.user)\n//declaring initial state\n\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; // register the user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    //makes call to authService register function which will handle http request\n    return await authService.register(user);\n  } catch (error) {\n    //if an error is returned, search in several places for the error message and return it\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString(); // returns error message as payload\n\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // login the user\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    //makes call to authService login function which will handle http request and return user info\n    return await authService.login(user);\n  } catch (error) {\n    //if an error is returned, search in several places for the error message and return it\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString(); // returns error message as payload\n\n    return thunkAPI.rejectWithValue(message);\n  }\n}); //logout user and destroy token in local storage\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n}); //creates authslice\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder // register \n    .addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }) // login \n    .addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }) // logout\n    .addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/homebase/Documents/David Codez Repo/MERN-iron-vault/iron-vault-client/src/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport { GymMember } from '../../lib/User'\nimport authService from './authService'\n\n// get user from local storage\n  \n// get user from local storage\n// let user = JSON.parse(localStorage.user)\n// console.log(localStorage.user)\n\n\n\n\n\n//declaring initial state\nconst initialState = {\n    user: null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: ''\n}\n\n// register the user\nexport const register = createAsyncThunk('auth/register', async (user: GymMember, thunkAPI) => {\n    try {\n        //makes call to authService register function which will handle http request\n        return await authService.register(user)\n    } catch (error: any) {\n        //if an error is returned, search in several places for the error message and return it\n        const message = (error.response && error.response.data && error.response.data.message) || \n            error.message || error.toString()\n        \n        // returns error message as payload\n        return thunkAPI.rejectWithValue(message)    \n    }\n})\n\n// login the user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n    try {\n        //makes call to authService login function which will handle http request and return user info\n        return await authService.login(user)\n    } catch (error: any) {\n        //if an error is returned, search in several places for the error message and return it\n        const message = (error.response && error.response.data && error.response.data.message) || \n            error.message || error.toString()\n        \n        // returns error message as payload\n        return thunkAPI.rejectWithValue(message)    \n    }\n})\n\n//logout user and destroy token in local storage\nexport const logout = createAsyncThunk('auth/logout', async () => {\n    await authService.logout()\n})\n\n//creates authslice\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false\n            state.isSuccess = false\n            state.isError = false\n            state.message = ''\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            // register \n            .addCase(register.pending, (state) => { \n                state.isLoading = true\n            })\n            .addCase(register.fulfilled, (state, action: any) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.user = action.payload\n            })\n            .addCase(register.rejected, (state,action: any) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n                state.user = null\n            }) \n            // login \n            .addCase(login.pending, (state) => { \n                state.isLoading = true\n            })\n            .addCase(login.fulfilled, (state, action: any) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.user = action.payload\n            })\n            .addCase(login.rejected, (state,action: any) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n                state.user = null\n            })\n            // logout\n            .addCase(logout.fulfilled, (state) =>{\n                state.user = null\n            })\n    },\n\n})\n\nexport const {reset} = authSlice.actions\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}